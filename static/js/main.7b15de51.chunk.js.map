{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","react_default","a","createElement","Fragment","text-align","id","class","type","accept","onchange","for","href","download","src","alt","width","height","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","dropArea","selectionbox","selectionbutton","files","preventDefaults","e","preventDefault","stopPropagation","highlight","classList","add","unhighlight","remove","handleFiles","length","textContent","Object","toConsumableArray","forEach","previewFile","file","reader","FileReader","readAsDataURL","onloadend","img","result","appendChild","pop","pq","ret","low","cur","l","RCHILD","LCHILD","temp","push","PARENT","Math","floor","how_white","pb","dst","pow","target","onclick","i","Image","canvas","ctx","getContext","URL","createObjectURL","addEventListener","this","strokeStyle","drawImage","imgPath","pred","done","pr","jxy","nextcheck","newxy","index","nbx","parseInt","nby","colors","getImageData","data","d","Array","isArray","unshift","beginPath","moveTo","item","lineTo","stroke","findPath","toDataURL","navigator","appVersion","toString","indexOf","msSaveOrOpenBlob","link","body","click","downloadFile","solveFile","eventName","cfiles","dataTransfer","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7b15de51.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nfunction App() {\n\n    return (\n      <React.Fragment>\n        <div>\n          <h1 text-align=\"center\">Maze Path Solver</h1>\n          <h3>Upload a <b>single</b> maze image below and hit the \"start\" button to begin processing the image. We will find the shortest path/solution to the maze.</h3>\n          <h3>Try downloading and entering a sample file to the right for an example of valid file format.</h3>\n          <h3>Refresh the page to start over or reset.</h3>\n        </div>\n        <div id=\"wrapper\">\n          <div id=\"drop-area\">\n            <form class=\"my-form\">\n              <p >Upload a file with the button below or by dragging and dropping images onto the dashed region</p>\n              <input type=\"file\" id=\"fileElem\" accept=\"image/*\" onchange=\"handleDrop(this.files)\"></input>\n              <label class=\"button\" id='selectionbutton' for=\"fileElem\">Select a maze/path-tracing file</label>\n            </form>\n            <div id=\"gallery\" />\n            <button class='button' id='solvebutton'>Solve</button> <br></br>\n            <canvas id='finalpath'></canvas>\n          </div>\n          <div id=\"sample-file-area\">\n            <form class=\"my-form-2\">\n              <p >Here are some sample maze files to play with...</p>\n              <b >Download these to test</b>\n              <a href=\"/sample-images/maze1.jpg\" download>\n                <img src=\"/sample-images/maze1.jpg\" alt=\"Maze1\" width=\"104\" height=\"104\"/>\n              </a>\n              <br></br>\n              <a href=\"/sample-images/maze2.png\" download>\n                <img src=\"/sample-images/maze2.png\" alt=\"Maze2\" width=\"142\" height=\"104\"/>\n              </a>\n              <br></br>\n              <a href=\"/sample-images/maze3.png\" download>\n                <img src=\"/sample-images/maze3.png\" alt=\"Maze3\" width=\"104\" height=\"142\"/>\n              </a>\n              <br></br>\n            </form>\n          </div>\n        </div>\n        <div>\n          <h5 text-align=\"center\">This application was created by Moe Ali, 2019. Utilized tech: Python, React, HTML, CSS, Javascript. Compiled and tested in Visual Studio Code.</h5>\n          <h6 text-align=\"center\">Background generated by uiGradients, 2019. Sample maze 2 and 3 provided by Google Images.</h6>\n        </div>\n      </React.Fragment>\n    );\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nlet dropArea = document.getElementById('drop-area');\nlet selectionbox = document.getElementById('fileElem');\nlet selectionbutton = document.getElementById('selectionbutton');\n\nlet files = [];\nlet total = ['dragenter', 'dragover', 'dragleave', 'drop'];\nlet holdingitem = ['dragenter', 'dragover'];\nlet droppeditem = ['dragleave', 'drop'];\n\nselectionbox.onchange = e => {\n    var file = e.target.files[0];\n    if (files.length !== 1) {\n        files= [file]\n        handleFiles(files)\n    }\n}\ndocument.getElementById('solvebutton').onclick = function() {\n    if ((files.length === 1) && (document.getElementById('solvebutton').textContent !== 'Solved!')) {\n        document.getElementById('solvebutton').textContent = 'Solving... this may take a minute.'\n        solveFile(files[0]);\n    }\n}\n\n  // Prevent default drag behaviors\n  total.forEach(eventName => {\n    dropArea.addEventListener(eventName, preventDefaults, false)   \n    document.body.addEventListener(eventName, preventDefaults, false)\n  })\n\n  // Highlight drop area when item is dragged over it\n  holdingitem.forEach(eventName => {\n    dropArea.addEventListener(eventName, highlight, false)\n  })\n\n  droppeditem.forEach(eventName => {\n    dropArea.addEventListener(eventName, unhighlight, false)\n  })\n\n  // Handle dropped files\n  dropArea.addEventListener('drop', handleDrop, false)\n\nfunction preventDefaults (e) {\n  e.preventDefault()\n  e.stopPropagation()\n}\n\nfunction highlight(e) {\n  dropArea.classList.add('highlight')\n}\n\nfunction unhighlight(e) {\n  dropArea.classList.remove('active')\n  dropArea.classList.remove('highlight')\n}\n\nfunction handleDrop(e) {\n  var dt = e.dataTransfer\n  var cfiles = dt.files\n  if (files.length !== 1) {\n    if (cfiles.length === 1) {\n        files.push(cfiles[0])\n        handleFiles(files)\n    }\n  }\n\n}\n\nfunction handleFiles(files) {\n    if (files.length === 1) {\n        selectionbutton.textContent = \"Uploading....\"\n        files = [...files]\n        files.forEach(previewFile)\n    }\n}\n\nfunction previewFile(file) {\n  let reader = new FileReader()\n  reader.readAsDataURL(file)\n  reader.onloadend = function() {\n    let img = document.createElement('img')\n    img.src = reader.result\n    document.getElementById('gallery').appendChild(img)\n    selectionbutton.textContent = \"Selection complete\" //Done. Inform the user\n  }\n}\n\nfunction solveFile(file, i) {\n    var img = new Image();\n    var canvas = document.getElementById('finalpath')\n    var ctx = canvas.getContext(\"2d\");\n\n    var url = window.URL;\n    var src = url.createObjectURL(files[0]);\n    img.src = src;\n    img.addEventListener(\"load\", function () {\n        img.width = this.width\n        img.height = this.height\n        canvas.width = img.width\n        canvas.height = img.height\n        ctx.strokeStyle = \"red\";\n\n        ctx.drawImage(img,0,0);\n        findPath(img, ctx);\n        downloadFile(ctx, canvas);\n    });\n\n}\n\nfunction downloadFile(ctx, canvas, i) {\n    //var fr = new FileReader();\n    //fr.readAsDataURL(file);\n\n    //var objectURL = window.URL.createObjectURL(file); //should be (blob)\n    //console.log(objectURL);\n    var img = new Image();\n    img.src = canvas.toDataURL();\n\n    if (navigator.appVersion.toString().indexOf('.NET') > 0) {\n        window.navigator.msSaveOrOpenBlob(img, 'image');\n    } else {\n        var link = document.createElement('a');\n        link.href = img.src;\n        link.download = \"image\";\n        document.body.appendChild(link);\n        link.click();\n        link.remove();\n    }\n}\n\n// `````````````````````\n// `````````````````````\nfunction findPath(img, ctx)\n{\n    var imgPath = [];\n    // *********\n    // Set up required data structures\n    var pred = {}\n    pred[[0,0]] = null\n    var done = {}\n    var pr = {}\n    pr[[0,0]] = 0\n    var pq = []\n    var target = [img.width - 1, img.height - 1]\n\n    // Add initial spot to queue\n    push(pq, [0, 0, 0]);\n    //console.log(\"CURRENT PQ:\"+pq);\n    // Standard Dijkstra loop\n    while (pq.length !== 0) {\n        var jxy = pop(pq);\n        //console.log(\"CURRENT PIXELS:\"+jxy[1] +','+jxy[2])\n        // If we're done with this, skip (this lets us not\n        //   have to implement decrease_priority)\n        if ([jxy[1], jxy[2]] in done) {\n            continue\n        }\n        done[[jxy[1], jxy[2]]] = 0\n\n        // If we reached goal, done\n        if ([jxy[1], jxy[2]] === target) {\n            break\n        }\n        var nextcheck =  [[jxy[1], jxy[2]-1], [jxy[1]+1, jxy[2]], [jxy[1], jxy[2]+1], [jxy[1]-1, jxy[2]]] \n\n        // For all possible neighbours...\n        nextcheck.forEach(function (newxy, index) {\n\n            var nbx = parseInt(newxy[0])\n            var nby = parseInt(newxy[1])\n            //console.log(\"CUR NEXT PIXEL:\"+nbx + \",\" + nby);\n            //console.log('IMAGE WIDTH:'+ img.width + \",\" + img.height);\n            // If valid and not already expanded\n            if ((0 <= nbx) && (nbx <= (img.width - 1)) && (0 <= nby) && (nby <= (img.height - 1)) && !([nbx, nby] in done)) {\n                //console.log(\"VALID CUR PIXEL:\"+nbx + \",\" + nby);\n                var colors = ctx.getImageData(nbx, nby, 1,1).data;\n                //console.log(\"VALID CUR PIXEL:\"+nbx + \",\" + nby+\"    COLORS:\"+colors[0]+ \",\" +colors[1]+ \",\" +colors[2]);\n                // Get and update the costs as necessary\n                var d = how_white(colors) + pr[[jxy[1], jxy[2]]]\n                //console.log(\"COST:\"+d)\n                if (!([nbx, nby] in pr) || (pr[[nbx, nby]] > d)) {\n                    pred[[nbx, nby]] = [jxy[1], jxy[2]]\n                    pr[[nbx, nby]] = d\n                    push(pq, [d, nbx, nby]);\n                }\n            }\n        });\n\n    }\n\n    // Backtrack and construct the path\n    while (Array.isArray(target)) {\n        imgPath.unshift(target);\n        target = pred[target]\n    }\n    // *********\n    //console.log(\"PATH IS:\"+imgPath);\n    ctx.beginPath();\n    ctx.moveTo(0,0);\n    imgPath.forEach(function (item, index) { // finally, visiting every pixel in path\n        ctx.lineTo(item[0], item[1]);\n      });\n    ctx.stroke(); // print path\n    document.getElementById('solvebutton').textContent = 'Solved!'\n    \n}\n\nfunction pop(pq){\n    if (pq.length == 1) {\n        return pq.pop()\n    }\n    // Replace min with last element\n    var ret = pq[0]\n    pq[0] = pq.pop()\n\n    // Keep swapping with smallest child if any of them is smaller\n    var low = 0\n    var cur = 0\n    var l = pq.length\n    while(true) {\n\n        cur = low\n\n        var RCHILD = (cur+1) * 2\n        var LCHILD = RCHILD - 1\n\n        if (LCHILD < l && pq[LCHILD][0] < pq[low][0]) {\n            low = LCHILD\n        }\n        if (RCHILD < l && pq[RCHILD][0] < pq[low][0]) {\n            low = RCHILD\n        }\n        if (cur === low) {\n            // Standard Dijkstra loop\n            break\n        }\n\n        var temp = pq[low]\n        pq[low] = pq[cur]\n        pq[cur] = temp\n    }\n\n    return ret\n}\nfunction push(pq, a) {\n    // Add to the end\n    pq.push(a)\n    var cur = (pq).length - 1\n\n    // Swap with parent while smaller\n    var PARENT = (Math.floor((cur + 1) / 2)) - 1\n    while (PARENT > 0 && pq[cur][0] < pq[PARENT][0]) \n    {\n        var temp = pq[PARENT]\n        pq[PARENT] = pq[cur]\n        pq[cur] = temp\n        cur = PARENT\n        PARENT = Math.floor((cur + 1) / 2) - 1\n    }\n}\n\nfunction how_white(pb) {\n    var dst = (255-pb[0])**2 + (255-pb[1])**2 + (255-pb[2])**2\n    return (((dst/100.0) ** 0.5) + 0.01)\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}